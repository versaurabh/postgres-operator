# Here we use https://github.com/prometheus-community/helm-charts/charts/kube-prometheus-stack
# Please keep the ServiceMonitor's label same as the Helm release name of kube-prometheus-stack 

apiVersion: v1
kind: Namespace
metadata:
  name: test-pg2
---
apiVersion: "acid.zalan.do/v1"
kind: postgresql
metadata:
  name: acid-minimal-cluster
  namespace: test-pg2
  labels:
    app: test-pg2
spec:
  patroni:
    initdb:
      encoding: "UTF8"
      locale: "en_US.UTF-8"
      data-checksums: "true"
    pg_hba:
      - host    all             all           0.0.0.0/0         trust
      - local   all             all                                   trust
      - hostssl all             +zalandos    127.0.0.1/32       pam
      - host    all             all                127.0.0.1/32       md5
      - hostssl all             +zalandos    ::1/128            pam
      - host    all             all                ::1/128            md5
      - local   replication     standby                    trust
      - hostssl replication     standby all                md5
      - hostssl all             +zalandos    all                pam
      - hostssl all             all                all                md5
  teamId: "acid"
  volume:
    size: 1Gi
  numberOfInstances: 1
  users:
    pheonix:  # database owner
    - superuser
    - createdb
    foo_user: []  # role for application foo
  databases:
    dm1: pheonix  # dbname: owner
  preparedDatabases:
    bar: {}
  postgresql:
    version: "15"
    # parameters:
    #   listen_addresses: "*"
  resources:
    limits:
      cpu: 500m
      memory: 256M
    requests:
      cpu: 100m
      memory: 200M
  sidecars:
    - name: "exporter"
      image: "wrouesnel/postgres_exporter"
      ports:
        - name: exporter
          containerPort: 9187
          protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 256M
        requests:
          cpu: 100m
          memory: 200M
      env:
      - name: "DATA_SOURCE_URI"
        value: "$(POD_NAME)/postgres?sslmode=require"
      - name: "DATA_SOURCE_USER"
        value: "$(POSTGRES_USER)"
      - name: "DATA_SOURCE_PASS"
        value: "$(POSTGRES_PASSWORD)"
      - name: "PG_EXPORTER_AUTO_DISCOVER_DATABASES"
        value: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: acid-minimal-cluster-svc-metrics-master
  namespace: test-pg2
  labels:
    app: test-pg2
    spilo-role: master
  annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9187"
spec:
  type: ClusterIP
  ports:
    - name: exporter
      port: 9187
      targetPort: exporter
  selector:
    application: spilo
    cluster-name: acid-minimal-cluster
    spilo-role: master
---
apiVersion: v1
kind: Service
metadata:
  name: acid-minimal-cluster-svc-metrics-replica
  namespace: test-pg2
  labels:
    app: test-pg2
    spilo-role: replica
  annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9187"
spec:
  type: ClusterIP
  ports:
    - name: exporter
      port: 9187
      targetPort: exporter
  selector:
    application: spilo
    cluster-name: acid-minimal-cluster
    spilo-role: replica
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: acid-minimal-cluster-svcm-master
  namespace: test-pg2
  labels:
    app: test-pg2
    spilo-role: master
spec:
  endpoints:
    - port: exporter
      interval: 15s
      scrapeTimeout: 10s
  namespaceSelector:
    matchNames:
      - monitoring
  selector:
    matchLabels:
      app: test-pg2
      spilo-role: master
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: acid-minimal-cluster-svcm-replica
  namespace: test-pg2
  labels:
    app: test-pg2
    spilo-role: replica
spec:
  endpoints:
    - port: exporter
      interval: 15s
      scrapeTimeout: 10s
  namespaceSelector:
    matchNames:
      - monitoring
  selector:
    matchLabels:
      app: test-pg2
      spilo-role: replica
